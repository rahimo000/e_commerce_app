# Cursor Rules

## Instructions

- Record fixes for mistakes or corrections to avoid repetition in the `Lessons` section.
- Organize thoughts and plan steps before starting a task in the `Scratchpad` section.
- Clear old tasks if necessary.
- Use todo markers for progress tracking:
  - `[X]` Completed tasks
  - `[ ]` Pending tasks
- Update Scratchpad after completing subtasks.
- Reflect and plan after milestones for better task management.
- Always refer to Scratchpad before planning the next step.

## Lessons
- When implementing authentication, prefer bcryptjs over bcrypt for better portability and easier deployment across different environments
- Always update both runtime dependencies and their corresponding type definitions (@types/*) when switching packages
- When implementing role-based access control, extend NextAuth types to include custom fields like 'role'

## Scratchpad

#### Phase 1: Project Setup and Configuration
- [X] Initialize Next.js 15 project with TypeScript
- [X] Set up project structure and folders
- [X] Configure ESLint and Prettier
- [X] Install and configure dependencies:
  - [X] Install and configure Shadcn UI:
    - [X] Add Tailwind CSS
    - [X] Set up components.json
    - [X] Configure global styles
  - [X] Install Lucide icons
  - [X] Set up Zod for form validation
  - [X] Configure Zustand for state management:
    - [X] Create store structure
    - [X] Set up cart store
    - [X] Set up user store
  - [X] Install and configure Recharts for analytics
  - [X] Set up Resend for email functionality
  - [X] Configure Uploadthing for file uploads
  - [X] Install and configure Prisma:
    - [X] Initialize Prisma
    - [X] Set up database connection
  - [X] Set up next-auth@beta:
    - [X] Configure providers
    - [X] Set up authentication routes
    - [X] Migrate from bcrypt to bcryptjs for better portability
  - [X] Install and configure Stripe:
    - [X] Set up API keys
    - [X] Configure webhooks

#### Phase 2: Database and Authentication
- [X] Set up PostgreSQL database
- [X] Configure Prisma schema:
  - User model
  - Product model
  - Category model
  - Order model
  - Review model
  - Cart model
  - Account model
  - Session model
  - Address model
- [X] Seed sample data:
  - Categories
  - Products
  - Users
- [X] Implement NextAuth.js authentication:
  - [X] Email/Password authentication with bcryptjs
  - [X] OAuth providers (Google, GitHub)
  - [X] JWT handling
  - [X] Protected routes:
    - [X] Implement middleware for route protection
    - [X] Add role-based access control
    - [X] Create auth utility functions
    - [X] Update Prisma schema for user roles

#### Phase 3: Core Features Implementation
- [ ] Implement home layout and navigation:
  - [X] Create `(home)` folder inside app directory
  - [X] Create responsive header with:
    - [X] Logo and branding
    - [X] Main navigation menu
    - [X] Search bar
    - [X] User menu dropdown
    - [X] Shopping cart icon
    - [X] Banner carousel
    - [X] Latest products
  - [X] Design footer with:
    - [X] Company information
    - [X] Quick links
    - [X] Newsletter subscription
    - [X] Social media links
  - [X] Implement mobile navigation:
    - [X] Hamburger menu
    - [X] Mobile search
    - [X] Responsive cart view

- [ ] Create product listing and filtering:
  - [ ] Implement product grid/list views:
    - [ ] Grid view with product cards
    - [ ] List view with detailed information
    - [ ] Toggle between views
  - [ ] Add filtering system:
    - [ ] Category filters
    - [ ] Price range filter
    - [ ] Rating filter
    - [ ] Availability filter
  - [ ] Implement sorting options:
    - [ ] Price (low to high/high to low)
    - [ ] Newest first
    - [ ] Best selling
    - [ ] Most reviewed
  - [ ] Add pagination

- [ ] Implement product search functionality:
  - [ ] Create search API endpoint
  - [ ] Implement real-time search suggestions
  - [ ] Add search filters:
    - [ ] Category-specific search
    - [ ] Price range
    - [ ] Availability
  - [ ] Implement search history
  - [ ] Add search analytics

- [ ] Build product detail pages:
  - [ ] Create product information layout:
    - [ ] Image gallery with zoom
    - [ ] Product title and description
    - [ ] Price and availability
    - [ ] Size/variant selection
    - [ ] Add to cart button
  - [ ] Implement related products section
  - [ ] Add product reviews and ratings:
    - [ ] Review submission form
    - [ ] Rating system
    - [ ] Review moderation
  - [ ] Create product sharing functionality

- [ ] Create shopping cart functionality:
  - [ ] Implement cart state management:
    - [ ] Add to cart
    - [ ] Remove from cart
    - [ ] Update quantities
    - [ ] Save cart to database
  - [ ] Create cart page:
    - [ ] Product list
    - [ ] Quantity controls
    - [ ] Price calculations
    - [ ] Promo code input
  - [ ] Add cart persistence:
    - [ ] Local storage backup
    - [ ] Sync with user account
  - [ ] Implement cart notifications

- [ ] Implement checkout process with Stripe:
  - [ ] Create checkout flow:
    - [ ] Address selection/input
    - [ ] Shipping method selection
    - [ ] Payment method selection
    - [ ] Order review
  - [ ] Integrate Stripe:
    - [ ] Set up payment intents
    - [ ] Handle payment processing
    - [ ] Implement error handling
  - [ ] Add order confirmation:
    - [ ] Success page
    - [ ] Email confirmation
    - [ ] Order tracking number

- [ ] Set up order management system:
  - [ ] Create order tracking:
    - [ ] Order status updates
    - [ ] Shipping tracking
    - [ ] Delivery notifications
  - [ ] Implement order history:
    - [ ] Order list view
    - [ ] Order details page
    - [ ] Reorder functionality
  - [ ] Add order management features:
    - [ ] Cancel order
    - [ ] Return/refund process
    - [ ] Order modification
  - [ ] Set up order notifications:
    - [ ] Status change emails
    - [ ] Shipping updates
    - [ ] Delivery confirmations

#### Phase 4: Admin Dashboard
- [ ] Create admin layout and navigation
- [ ] Implement product management:
  - CRUD operations
  - Image upload with Uploadthing
  - Category management
- [ ] Build order management interface
- [ ] Create user management system
- [ ] Implement analytics dashboard with Recharts
- [ ] Set up email notifications with Resend

#### Phase 5: User Features
- [ ] Implement user profile management
- [ ] Create wishlist functionality
- [ ] Build review and rating system
- [ ] Implement order tracking
- [ ] Create email notifications system

#### Phase 6: Testing and Optimization
- [ ] Write unit tests
- [ ] Perform integration testing
- [ ] Optimize performance
- [ ] Implement SEO best practices
- [ ] Add error handling and logging

#### Phase 7: Deployment
- [ ] Set up production environment
- [ ] Configure CI/CD pipeline
- [ ] Deploy to production
- [ ] Monitor and maintain

### Current Focus
Starting Phase 2: Database and Authentication